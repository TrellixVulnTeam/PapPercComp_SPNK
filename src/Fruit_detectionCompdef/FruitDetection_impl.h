// --------------------------------------------------------
// Code generated by Papyrus C++
// --------------------------------------------------------

#ifndef SRC_FRUIT_DETECTIONCOMPDEF_FRUITDETECTION_IMPL_H_
#define SRC_FRUIT_DETECTIONCOMPDEF_FRUITDETECTION_IMPL_H_

/************************************************************
 FruitDetection_impl class header
 ************************************************************/

#include <chrono>
#include <future>
#include <map>
#include <memory>
#include <string>
#include <vector>

#include "Fruit_detectionCompdef/Pkg_Fruit_detectionCompdef.h"
#include "Fruit_detectionCompdef/FruitDetection.h"

#include "sensor_msgs/msg/image.hpp"
#include "fruit_detection/srv/classification.hpp"
#include "fruit_detection/srv/detection.hpp"
#include "fruit_detection/msg/class_box.hpp"

#include "opencv2/opencv.hpp"
#include "cv_bridge/cv_bridge.h"

namespace ros2Library {
namespace rclcpp {
class NodeOptions;
}
}  // namespace ros2Library

namespace Fruit_detectionCompdef {

/************************************************************/
/**
 * This is a modified class generated for component FruitDetection
 * 
 */
class FruitDetection_impl : public FruitDetection {
 public:
    /**
     * 
     * @param options 
     */
    explicit FruitDetection_impl(rclcpp::NodeOptions /*in*/ options);

    /**
     * 
     * @param image 
     */
    void FruitDetectionHandler(
        const sensor_msgs::msg::Image::SharedPtr /*in*/ image);

    void classifyDisease(cv_bridge::CvImagePtr cv_ptr,
                            std::vector<fruit_detection::msg::ClassBox> boxes);
    void detectFruits(cv_bridge::CvImagePtr cv_ptr);
    void drawAndPublish(cv_bridge::CvImagePtr cv_ptr,
                            std::vector<fruit_detection::msg::ClassBox> boxes);
    rclcpp::Client<fruit_detection::srv::Detection>::SharedPtr detectionClient;
    rclcpp::Client<fruit_detection::srv::Classification>::SharedPtr diseaseClient;
    bool test = true;
};
/************************************************************/
/* External declarations (package visibility)               */
/************************************************************/

/* Inline functions                                         */
inline std::string createLabel(fruit_detection::msg::ClassBox box) {
    std::string label = "";
    label.append(box.fruit.data());
    label.append(": ");
    label.append(std::to_string(box.fruit_score));
    label.append("%, ");
    label.append(box.disease.data());
    label.append(": ");
    label.append(std::to_string(box.disease_score));
    label.append("%");
    return label;
}
}  // namespace Fruit_detectionCompdef

/************************************************************
 End of FruitDetection_impl class header
 ************************************************************/

#endif  // SRC_FRUIT_DETECTIONCOMPDEF_FRUITDETECTION_IMPL_H_
