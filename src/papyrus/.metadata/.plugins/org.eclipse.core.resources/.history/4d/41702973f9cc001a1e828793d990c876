// --------------------------------------------------------
// Code generated by Papyrus C++
// --------------------------------------------------------

#define RVIZVisualizationComponentCompdef_RVIZVisualizationComponent_BODY

/************************************************************
 RVIZVisualizationComponent class body
 ************************************************************/

// include associated header file
#include "RVIZVisualizationComponentCompdef/RVIZVisualizationComponent.h"

// Derived includes directives
#include "../../src/RVIZVisualizationComponentCompdef/RVIZVisualizationComponent_impl.h"
#include "rclcpp/rclcpp.hpp"

// Include from Include declaration (body)
// declare options
rclcpp::NodeOptions rvizvisualizationcomponent_options;

int main(int argc, char **argv) {
	rclcpp::init(argc, argv);

	auto rvizvisualizationcomponent = std::make_shared<
			RVIZVisualizationComponentCompdef::RVIZVisualizationComponent_impl>(
			rvizvisualizationcomponent_options);

	RCLCPP_INFO(rvizvisualizationcomponent->get_logger(),
			"RVIZVisualizationComponent has been initialized");

	rclcpp::executors::MultiThreadedExecutor executor;

	executor.add_node(rvizvisualizationcomponent->get_node_base_interface());

	executor.spin();
	rclcpp::shutdown();
}

// End of Include declaration (body)

namespace RVIZVisualizationComponentCompdef {

// static attributes (if any)

/**
 * 
 * @param options 
 */
RVIZVisualizationComponent::RVIZVisualizationComponent(
		rclcpp::NodeOptions /*in*/options) :
		rclcpp_lifecycle::LifecycleNode("RVIZVisualizationComponent", options) {
	Port_sub_ =
			create_subscription<geometry_msgs::msg::PoseArray>("Port",
					rclcpp::QoS(rclcpp::KeepLast(100)).best_effort(),
					std::bind(
							&RVIZVisualizationComponentCompdef::RVIZVisualizationComponent_impl::visualization,
							(RVIZVisualizationComponent_impl*) this,
							std::placeholders::_1));

	Port_pub_ = create_publisher<visualization_msgs::msg::MarkerArray>("Port",
			1);
	// directly activate a publisher
	Port_pub_->on_activate();

}

} // of namespace RVIZVisualizationComponentCompdef

/************************************************************
 End of RVIZVisualizationComponent class body
 ************************************************************/
