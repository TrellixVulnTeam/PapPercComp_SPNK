<?xml version="1.0" ?>
<launch>

  <!-- Define the tool center point (tcp) link relative to the inverse kinematics link that Moveit uses 
       which is the last link in the kinematic chain. In our case, this is the wrist_3_link. -->
  <arg name="wrist_3_link_to_tcp_XYZYPR" default="0 0.269 0 0 0 0" />

  <!-- Rotate the grasp such that its orientation aligns with the tcp link. -->
  <arg name="grasp_to_grasp_aligned_XYZYPR" default="0 0 0 1.5707 0 1.5707" />

  <!-- launch move group for first robot -->
  <group ns="robot1">
    <!-- remap controllers -->
    <remap from="/robot1/robot1_arm_trajectory_controller"                              to="/robot1_arm_trajectory_controller" />
    <remap from="/robot1/robot1_gripper_trajectory_controller"                          to="/robot1_gripper_trajectory_controller" />
    <remap from="/robot1/robot2_arm_trajectory_controller"                              to="/robot2_arm_trajectory_controller" />
    <remap from="/robot1/robot2_gripper_trajectory_controller"                          to="/robot2_gripper_trajectory_controller" />

    <remap from="/robot1/robot1_arm_trajectory_controller/follow_joint_trajectory"      to="/robot1_arm_trajectory_controller/follow_joint_trajectory" />
    <remap from="/robot1/robot1_arm_trajectory_controller/state"                        to="/robot1_arm_trajectory_controller/state" />
    <remap from="/robot1/robot1_arm_trajectory_controller/command"                      to="/robot1_arm_trajectory_controller/command" />

    <remap from="/robot1/robot1_gripper_trajectory_controller/follow_joint_trajectory"  to="/robot1_gripper_trajectory_controller/follow_joint_trajectory" />
    <remap from="/robot1/robot1_gripper_trajectory_controller/state"                    to="/robot1_gripper_trajectory_controller/state" />
    <remap from="/robot1/robot1_gripper_trajectory_controller/command"                  to="/robot1_gripper_trajectory_controller/command" />

    <remap from="/robot1/robot2_arm_trajectory_controller/follow_joint_trajectory"      to="/robot2_arm_trajectory_controller/follow_joint_trajectory" />
    <remap from="/robot1/robot2_arm_trajectory_controller/state"                        to="/robot2_arm_trajectory_controller/state" />
    <remap from="/robot1/robot2_arm_trajectory_controller/command"                      to="/robot2_arm_trajectory_controller/command" />

    <remap from="/robot1/robot2_gripper_trajectory_controller/follow_joint_trajectory"  to="/robot2_gripper_trajectory_controller/follow_joint_trajectory" />
    <remap from="/robot1/robot2_gripper_trajectory_controller/state"                    to="/robot2_gripper_trajectory_controller/state" />
    <remap from="/robot1/robot2_gripper_trajectory_controller/command"                  to="/robot2_gripper_trajectory_controller/command" />

    <remap from="/robot1/robot_description" to="/robot_description" />
    <remap from="/robot1/joint_states" to="/joint_states" />

    <!-- sensor configuration for Moveit -->
    <rosparam ns="move_group" command="load" file="$(find chair_manipulation_gazebo)/cfg/sensors.yaml" />

    <!-- launch moveit -->
    <include file="$(find dual_arm_manipulator_moveit_config)/launch/dual_arm_manipulator_moveit_planning_execution.launch">
      <arg name="use_rviz" value="false" />
    </include>
  </group>

  <!-- launch move group for second robot -->
  <group ns="robot2">
    <!-- remap controllers -->
    <remap from="/robot2/robot1_arm_trajectory_controller"                              to="/robot1_arm_trajectory_controller" />
    <remap from="/robot2/robot1_gripper_trajectory_controller"                          to="/robot1_gripper_trajectory_controller" />
    <remap from="/robot2/robot2_arm_trajectory_controller"                              to="/robot2_arm_trajectory_controller" />
    <remap from="/robot2/robot2_gripper_trajectory_controller"                          to="/robot2_gripper_trajectory_controller" />

    <remap from="/robot2/robot1_arm_trajectory_controller/follow_joint_trajectory"      to="/robot1_arm_trajectory_controller/follow_joint_trajectory" />
    <remap from="/robot2/robot1_arm_trajectory_controller/state"                        to="/robot1_arm_trajectory_controller/state" />
    <remap from="/robot2/robot1_arm_trajectory_controller/command"                      to="/robot1_arm_trajectory_controller/command" />

    <remap from="/robot2/robot1_gripper_trajectory_controller/follow_joint_trajectory"  to="/robot1_gripper_trajectory_controller/follow_joint_trajectory" />
    <remap from="/robot2/robot1_gripper_trajectory_controller/state"                    to="/robot1_gripper_trajectory_controller/state" />
    <remap from="/robot2/robot1_gripper_trajectory_controller/command"                  to="/robot1_gripper_trajectory_controller/command" />

    <remap from="/robot2/robot2_arm_trajectory_controller/follow_joint_trajectory"      to="/robot2_arm_trajectory_controller/follow_joint_trajectory" />
    <remap from="/robot2/robot2_arm_trajectory_controller/state"                        to="/robot2_arm_trajectory_controller/state" />
    <remap from="/robot2/robot2_arm_trajectory_controller/command"                      to="/robot2_arm_trajectory_controller/command" />

    <remap from="/robot2/robot2_gripper_trajectory_controller/follow_joint_trajectory"  to="/robot2_gripper_trajectory_controller/follow_joint_trajectory" />
    <remap from="/robot2/robot2_gripper_trajectory_controller/state"                    to="/robot2_gripper_trajectory_controller/state" />
    <remap from="/robot2/robot2_gripper_trajectory_controller/command"                  to="/robot2_gripper_trajectory_controller/command" />

    <remap from="/robot2/robot_description" to="/robot_description" />
    <remap from="/robot2/joint_states" to="/joint_states" />

    <!-- sensor configuration for Moveit -->
    <rosparam ns="move_group" command="load" file="$(find chair_manipulation_gazebo)/cfg/sensors.yaml" />

    <!-- launch moveit -->
    <include file="$(find dual_arm_manipulator_moveit_config)/launch/dual_arm_manipulator_moveit_planning_execution.launch">
      <arg name="use_rviz" value="false" />
    </include>
  </group>

  <!-- grasp detection (first robot) -->
  <include ns="camera1" file="$(find chair_manipulation_grasp_detection)/launch/depth_image_detection.launch">
    <arg name="grasp_frame" value="robot1_grasp" />
  </include>

  <!-- grasp detection (second robot) -->
  <include ns="camera2" file="$(find chair_manipulation_grasp_detection)/launch/depth_image_detection.launch">
    <arg name="grasp_frame" value="robot2_grasp" />
  </include>

  <!-- wrist_3_link -> tcp (first robot) -->
  <node name="robot1_wirst_3_link_to_tcp" pkg="tf2_ros" type="static_transform_publisher"
        args="$(arg wrist_3_link_to_tcp_XYZYPR) robot1_wrist_3_link robot1_tcp" />

  <!-- wrist_3_link -> tcp (second robot) -->
  <node name="robot2_wirst_3_link_to_tcp" pkg="tf2_ros" type="static_transform_publisher" 
        args="$(arg wrist_3_link_to_tcp_XYZYPR) robot2_wrist_3_link robot2_tcp" />

  <!-- grasp -> grasp_tcp_aligned (first robot) -->
  <node name="robot1_grasp_to_grasp_tcp_aligned" pkg="tf2_ros" type="static_transform_publisher"
        args="$(arg grasp_to_grasp_aligned_XYZYPR) robot1_grasp robot1_grasp_tcp_aligned" />
  
  <!-- grasp -> grasp_tcp_aligned (second robot) -->
  <node name="robot2_grasp_to_grasp_tcp_aligned"  pkg="tf2_ros" type="static_transform_publisher"
        args="$(arg grasp_to_grasp_aligned_XYZYPR) robot2_grasp robot2_grasp_tcp_aligned" />

  <!-- rviz -->
  <node name="$(anon rviz)" pkg="rviz" type="rviz" args="-d $(find chair_manipulation_gazebo)/cfg/scene.rviz" respawn="false" output="screen" />

</launch>