// --------------------------------------------------------
// Code generated by Papyrus C++
// --------------------------------------------------------

#define Garbage_classificationCompdef_Garbage_classification_impl_BODY

/************************************************************
 Garbage_classification_impl class body
 ************************************************************/

// include associated header file
#include "Garbage_classificationCompdef/Garbage_classification_impl.h"

// Derived includes directives
#include "rclcpp/rclcpp.hpp"

#include <torch/script.h>
#include <opencv2/opencv.hpp>


#define GLASS 0
#define PAPER 1
#define CARDBOARD 2
#define PLASTIC 3
#define METAL 4
#define TRASH 5


#define DIM1 384
#define DIM2 512

static std::unordered_map<int, std::string> CLASSES = {
		{GLASS, "GLASS" },
		{ PAPER, "PAPER" },
		{ CARDBOARD, "CARDBOARD" },
		{ PLASTIC, "PLASTIC" },
		{ METAL, "METAL" },
		{ TRASH, "TRASH" }
};

namespace Garbage_classificationCompdef {

// static attributes (if any)

/**
 * 
 * @param options 
 */
Garbage_classification_impl::Garbage_classification_impl(
		rclcpp::NodeOptions /*in*/options) :
		Garbage_classification(options) {
}

/**
 * 
 * @param image 
 */
void Garbage_classification_impl::classify(
		const sensor_msgs::msg::Image::SharedPtr /*in*/image) {
}

} // of namespace Garbage_classificationCompdef

/************************************************************
 End of Garbage_classification_impl class body
 ************************************************************/
