// --------------------------------------------------------
// Code generated by Papyrus C++
// --------------------------------------------------------

#define KnowRobWrapperCompdef_KnowRobWrapper_BODY

/************************************************************
 KnowRobWrapper class body
 ************************************************************/

// include associated header file
#include "KnowRobWrapperCompdef/KnowRobWrapper.h"

// Derived includes directives
#include "KnowRobWrapperCompdef/KnowRobWrapper_impl.h"
#include "rclcpp/rclcpp.hpp"

// Include from Include declaration (body)
// declare options
rclcpp::NodeOptions knowrobwrapper_options;


int main(int argc, char **argv) {
	rclcpp::init(argc, argv);

	auto knowrobwrapper = std::make_shared<
			KnowRobWrapperCompdef::KnowRobWrapper_impl>(knowrobwrapper_options);

	RCLCPP_INFO(knowrobwrapper->get_logger(),
			"KnowRobWrapper has been initialized");

	rclcpp::executors::MultiThreadedExecutor executor;

	executor.add_node(knowrobwrapper->get_node_base_interface());
	while (rclcpp::ok())
	{
		auto query = std_msgs::msg::String();
		std::cout << "Please enter a query for KnowRob: ";
		std::cin >> query.data;
		RCLCPP_INFO(knowrobwrapper->get_logger(), "Publishing: '%s'", query.data.c_str());

		knowrobwrapper->query_pub_->publish(std::move(query));
		
		executor.spin_once();
	}
	executor.spin();
	rclcpp::shutdown();
}


// End of Include declaration (body)

namespace KnowRobWrapperCompdef {




// static attributes (if any)

/**
 * 
 * @param options 
 */
KnowRobWrapper::KnowRobWrapper(rclcpp::NodeOptions /*in*/options) :
		rclcpp_lifecycle::LifecycleNode("KnowRobWrapper", options) {
	query_pub_ = create_publisher<std_msgs::msg::String>("chatter", 100);
	// directly activate a publisher
	query_pub_->on_activate();

	response_sub_ =
			create_subscription<std_msgs::msg::String>("response",
					rclcpp::QoS(rclcpp::KeepLast(100)).best_effort(),
					std::bind(
							&KnowRobWrapperCompdef::KnowRobWrapper_impl::ResponseHandler,
							(KnowRobWrapper_impl*) this,
							std::placeholders::_1));

}

} // of namespace KnowRobWrapperCompdef

/************************************************************
 End of KnowRobWrapper class body
 ************************************************************/
